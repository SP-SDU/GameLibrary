document.addEventListener("DOMContentLoaded", () => { document.querySelectorAll("canvas[data-chart-type]").forEach(a => { let t = a.dataset.chartType, e = JSON.parse(a.dataset.chartLabels || "[]"), r = JSON.parse(a.dataset.chartData || "[]"), o = a.dataset.chartLabelText || "Data", s = a.dataset.chartBackgroundcolors ? JSON.parse(a.dataset.chartBackgroundcolors) : null, d = a.dataset.chartBordercolor || "rgba(255, 99, 132, 1)", l = a.dataset.chartBackgroundcolor || "rgba(255, 99, 132, 0.2)", n = a.getContext("2d"), i; switch (t) { case "bar": i = { type: "bar", data: { labels: e, datasets: [{ label: o, data: r, backgroundColor: l, borderColor: d, borderWidth: 1 }] }, options: { responsive: !0, plugins: { legend: { position: "top" }, title: { display: !0, text: o + " Chart" } } } }; break; case "pie": i = { type: "pie", data: { labels: e, datasets: [{ data: r, backgroundColor: s || ["#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0", "#9966FF", "#FF9F40"] }] }, options: { responsive: !0, plugins: { legend: { position: "top" }, title: { display: !0, text: o + " Chart" } } } }; break; case "line": i = { type: "line", data: { labels: e, datasets: [{ label: o, data: r, backgroundColor: l || "rgba(75, 192, 192, 0.2)", borderColor: d || "rgba(75, 192, 192, 1)", borderWidth: 1 }] }, options: { responsive: !0, plugins: { legend: { position: "top" }, title: { display: !0, text: o + " Chart" } } } }; break; default: console.warn("Unknown chart type:", t) }i && (_ = new Chart(n, i)) }) });
